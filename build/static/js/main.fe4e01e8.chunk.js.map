{"version":3,"sources":["Api.js","components/Form.js","components/List.js","components/Result.js","components/App.js","index.js"],"names":["url","AppForm","props","_useState","useState","_useState2","Object","slicedToArray","message","setMessage","_useState3","_useState4","submitMsg","setSubmitMsg","react_default","a","createElement","Card_default","Body","Title","InputGroup_default","FormControl_default","placeholder","aria-label","aria-describedby","value","onChange","e","target","Button_default","variant","onClick","setLoading","setRender","fetch","method","then","res","json","setData","catch","err","setErr","body","JSON","stringify","userId","headers","Content-Type","PostNew","status","List","className","Table_default","striped","bordered","hover","size","data","map","col","ind","Result","toString","loading","App","render","_useState5","_useState6","_useState7","_useState8","controlProps","Header","assign","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.fe4e01e8.chunk.js","sourcesContent":["const url = '/api';\n\nexport function PostNew(message) {\n    const body = JSON.stringify({\n        \"message\": message,\n        \"userId\": \"thatoneguy\"\n    })\n    return fetch(url+'/new', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: body\n    })\n}\n\nexport function GetMessages() {\n    return fetch(url+'/get', {\n        method: 'GET',\n    })\n}","//React and hooks\nimport React, { useState } from 'react';\n\n//Bootstrap components\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\n//Api(fetch) calls\nimport {GetMessages, PostNew} from '../Api';\n\nexport function AppForm(props) {\n    //Hooks for message\n    const [message, setMessage] = useState('');\n    const [submitMsg, setSubmitMsg] = useState(null);\n\n    //Event triggers\n    function messageChange(e) {\n        setMessage(e.target.value)\n    }\n\n    //Message submit event\n    function submitEvent() {\n        PostNew(message)\n        .then((res) => {\n            if (res.status == 200){\n                setSubmitMsg('Message Posted!')\n            }\n            else {\n                setSubmitMsg('Error posting your message!')\n            }\n        })\n    }\n\n    //Show top ten event\n    function showTopTen() {\n        props.setLoading(true);\n        props.setRender('results');\n        GetMessages()\n        .then((res) => {\n            return res.json()\n        })\n        .then((res) => {\n            props.setData(res);\n        })\n        .then(() => props.setLoading(false))\n        .catch((err) => {\n            props.setErr(err);\n        }); \n    }\n\n    return (\n        <Card.Body>\n            <Card.Title>Leave your message, or see what's trending on Cosmos Point Six.</Card.Title>\n            <InputGroup>\n                <FormControl\n                    placeholder=\"Your message\"\n                    aria-label=\"Your message\"\n                    aria-describedby=\"basic-addon1\"\n                    value={message}\n                    onChange={messageChange}\n                />\n            </InputGroup>\n            <Button variant=\"primary\" onClick = {showTopTen}>Trending</Button>\n            <Button variant=\"primary\" onClick = {submitEvent}>Submit</Button>\n            <p>{submitMsg}</p>\n        </Card.Body>\n    )\n}","import React from 'react';\nimport Table from 'react-bootstrap/Table'\n\nexport function List(props) {\n    return (\n        <div className=\"list\">\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Message</th>\n                    </tr>\n                </thead>\n                {props.data.map((col, ind) => (<tr>\n                    <td>{ind + 1}</td>\n                    <td>{col}</td>\n                </tr>))}\n            </Table>\n        </div>\n    )\n}","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport {List} from './List';\n\nexport function Result(props){\n    function back(){\n        props.setRender('form')\n        props.setErr(null);\n    }\n\n    return(\n        <Card.Body>\n            {(props.err) ? props.err.toString() : null}\n            {props.loading ? <p>Loading</p> : <List data = {props.data}/>}\n            <Button variant=\"primary\" onClick = {back}>Back</Button>\n        </Card.Body>\n    )\n}","//React, router and hooks\nimport React from 'react';\nimport { useState } from 'react';\n\n//Css and bootstrap\nimport '../css/App.css';\nimport Card from 'react-bootstrap/Card';\n\n//Components\nimport { AppForm } from './Form';\nimport { Result } from './Result'\n\n\n\nfunction App() {\n  //Hooks that manage main states\n  const [render, setRender] = useState('form'); //Determines if the form or results is rendered\n  const [loading, setLoading] = useState(false); //if currently loading\n  const [data, setData] = useState(null); //Stores the array of messages\n  const [err, setErr] = useState(null);\n\n  //Props to allow components to change the main states\n  const controlProps = {\n    setRender: setRender,\n    setLoading: setLoading,\n    setData: setData,\n    setErr: setErr\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Card>\n        <Card.Header>Cosmos Point Six</Card.Header>\n        {(render === 'form') ? <AppForm {...controlProps} /> : <Result {...controlProps} data={data} err = {err} loading = {loading}/>}\n        <p>A little experimental MERN stack app by Frank Li and Sebastian Muir-Smith @ QUT, Brisbane</p>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}